<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:icon="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
	<Style TargetType="Button">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<TextBlock Text="{TemplateBinding Property=Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Accent2}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
			<Style TargetType="TextBlock" BasedOn="{StaticResource ResourceKey=DefaultTextBlock}">
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="AddButton">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<Grid>
							<Line X2="10" Margin="0,0,0,-1"/>
							<Line Y2="10" Margin="0,0,-1,0"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Opacity" Value="100"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Light}"/>
				<Setter Property="CornerRadius" Value="5"/>
				<Setter Property="Opacity" Value="0"/>
			</Style>
			<Style TargetType="Line">
				<Setter Property="HorizontalAlignment" Value="Center"/>
				<Setter Property="Stroke" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="StrokeThickness" Value="2"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="CancelButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<TextBlock Text="{TemplateBinding Property=Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Red2}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Red1}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
			<Style TargetType="TextBlock" BasedOn="{StaticResource ResourceKey=DefaultTextBlock}">
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=Red3}"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="CloseButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<Grid>
							<Line Y2="10"/>
							<Line Y1="10"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Red2}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
			</Style>
			<Style TargetType="Line">
				<Setter Property="HorizontalAlignment" Value="Center"/>
				<Setter Property="Stroke" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="StrokeThickness" Value="2"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="X2" Value="10"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="EditButton">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<Grid>
							<Ellipse Margin="-10,0,0,0"/>
							<Ellipse/>
							<Ellipse Margin="0,0,-10,0"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Opacity" Value="100"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Light}"/>
				<Setter Property="CornerRadius" Value="5"/>
				<Setter Property="Opacity" Value="0"/>
			</Style>
			<Style TargetType="Ellipse">
				<Setter Property="Fill" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="Height" Value="4"/>
				<Setter Property="Width" Value="4"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="MinimiseButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<Line/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Light}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
			</Style>
			<Style TargetType="Line">
				<Setter Property="HorizontalAlignment" Value="Center"/>
				<Setter Property="Stroke" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="StrokeThickness" Value="2"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="X2" Value="12"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="RemoveButton">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<Grid>
							<Line Y2="7.5"/>
							<Line Y1="7.5"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Opacity" Value="100"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Red2}"/>
				<Setter Property="CornerRadius" Value="5"/>
				<Setter Property="Opacity" Value="0"/>
			</Style>
			<Style TargetType="Line">
				<Setter Property="HorizontalAlignment" Value="Center"/>
				<Setter Property="Stroke" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="StrokeThickness" Value="2"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
				<Setter Property="X2" Value="7.5"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="Button" x:Key="SaveButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border">
						<TextBlock Text="{TemplateBinding Property=Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Green2}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Green1}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
			<Style TargetType="TextBlock" BasedOn="{StaticResource ResourceKey=DefaultTextBlock}">
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=Green3}"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="CheckBox" x:Key="CheckButton">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="30"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Border x:Name="Border">
						<Polyline Name="Check"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Light}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Check" Property="Stroke" Value="{StaticResource ResourceKey=Green3}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
			<Style TargetType="Polyline">
				<Setter Property="Points" Value="0,10 5,15 15,0"/>
				<Setter Property="HorizontalAlignment" Value="Center"/>
				<Setter Property="Stroke" Value="{StaticResource ResourceKey=Grey}"/>
				<Setter Property="StrokeThickness" Value="2"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="RadioButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Border x:Name="Border">
						<TextBlock x:Name="Content" Text="{TemplateBinding Property=Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Light}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Content" Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Accent1}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="RadioButton" x:Key="SidepanelButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid>
						<Border x:Name="Border">
							<StackPanel>
								<ContentPresenter/>
								<TextBlock Text="{TemplateBinding Property=Tag}"/>
							</StackPanel>
						</Border>
						<Rectangle x:Name="Rectangle"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Accent2}"/>
							<Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Accent2}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
			<Style TargetType="{x:Type icon:IconBlock}">
				<Setter Property="FontSize" Value="20"/>
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
				<Setter Property="TextAlignment" Value="Center"/>
				<Setter Property="Width" Value="50"/>
			</Style>
			<Style TargetType="Rectangle">
				<Setter Property="Fill" Value="{StaticResource ResourceKey=White}"/>
				<Setter Property="Height" Value="20"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="Margin" Value="5,0,0,0"/>
				<Setter Property="RadiusX" Value="1.5"/>
				<Setter Property="RadiusY" Value="1.5"/>
				<Setter Property="Visibility" Value="Collapsed"/>
				<Setter Property="Width" Value="3"/>
			</Style>
			<Style TargetType="StackPanel">
				<Setter Property="Orientation" Value="Horizontal"/>
				<Setter Property="Width" Value="140"/>
			</Style>
			<Style TargetType="TextBlock" BasedOn="{StaticResource ResourceKey=DefaultTextBlock}">
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="Margin" Value="1,0,0,0"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="ToggleButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="Border">
						<TextBlock x:Name="Content" Text="{TemplateBinding Property=Content}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Light}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Content" Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Accent1}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="ToggleButton" x:Key="MaximiseButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Border x:Name="MaximiseButton" Visibility="Visible">
							<Rectangle x:Name="Icon1"/>
						</Border>
						<Border x:Name="NormalButton" Visibility="Collapsed">
							<Grid>
								<Rectangle x:Name="Icon2" Margin="2,0,0,2"/>
								<Rectangle x:Name="Icon3" Margin="0,2,2,0"/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="MaximiseButton" Property="Background" Value="{StaticResource ResourceKey=Light}"/>
							<Setter TargetName="NormalButton" Property="Background" Value="{StaticResource ResourceKey=Light}"/>
							<Setter TargetName="Icon1" Property="Fill" Value="{StaticResource ResourceKey=Light}"/>
							<Setter TargetName="Icon2" Property="Fill" Value="{StaticResource ResourceKey=Light}"/>
							<Setter TargetName="Icon3" Property="Fill" Value="{StaticResource ResourceKey=Light}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="MaximiseButton" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="NormalButton" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
			</Style>
			<Style TargetType="Rectangle">
				<Setter Property="Fill" Value="{StaticResource ResourceKey=Grey}"/>
				<Setter Property="Height" Value="10"/>
				<Setter Property="Stroke" Value="{StaticResource ResourceKey=Accent1}"/>
				<Setter Property="StrokeThickness" Value="2"/>
				<Setter Property="Width" Value="12"/>
			</Style>
		</Style.Resources>
	</Style>
	<Style TargetType="ToggleButton" x:Key="SidepanelToggleButton">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="Border">
						<Grid>
							<StackPanel x:Name="CollapseButton" Visibility="Visible">
								<icon:IconBlock Icon="ChevronLeft"/>
								<TextBlock Text="collapse"/>
							</StackPanel>
							<StackPanel x:Name="ExpandButton" Visibility="Collapsed">
								<icon:IconBlock Icon="ChevronRight"/>
							</StackPanel>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource ResourceKey=Accent2}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="CollapseButton" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="ExpandButton" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Resources>
			<Style TargetType="Border">
				<Setter Property="Background" Value="{StaticResource ResourceKey=Transparent}"/>
				<Setter Property="CornerRadius" Value="5"/>
			</Style>
			<Style TargetType="icon:IconBlock">
				<Setter Property="FontSize" Value="20"/>
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
				<Setter Property="TextAlignment" Value="Center"/>
				<Setter Property="Width" Value="50"/>
			</Style>
			<Style TargetType="StackPanel">
				<Setter Property="Orientation" Value="Horizontal"/>
				<Setter Property="Width" Value="140"/>
			</Style>
			<Style TargetType="TextBlock" BasedOn="{StaticResource ResourceKey=DefaultTextBlock}">
				<Setter Property="Foreground" Value="{StaticResource ResourceKey=White}"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="Margin" Value="1,0,0,0"/>
			</Style>
		</Style.Resources>
	</Style>
</ResourceDictionary>